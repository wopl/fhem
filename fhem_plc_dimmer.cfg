###############################################################################
#                                                                             #
# fhem_plc_dimmer.cfg                              Wolfram Plettscher 07/2016 #
# included into fhem_main.cfg                                                 #
#                                                                             #
# communicate with Wago PLC dimmer devices                                    #
#                                                                             #
###############################################################################


###############################################################################
### Dimmer Spiegel Bad
define Dimmer_Spiegel_Bad dummy
attr Dimmer_Spiegel_Bad room Licht,Bad,SPS
attr Dimmer_Spiegel_Bad group Licht
#attr Dimmer_Spiegel_Bad webCmd off:25:50:on
#attr Dimmer_Spiegel_Bad eventMap /off:0/25:25/50:50/on:85/
attr Dimmer_Spiegel_Bad userattr plcflag

attr Dimmer_Spiegel_Bad eventMap /off:0/25:25/50:50/on:85/
attr Dimmer_Spiegel_Bad webCmd off:25:50:on
attr Dimmer_Spiegel_Bad fp_obergeschoss 653,1145,0,Spiegel_Bad
attr Dimmer_Spiegel_Bad devStateIcon 0:light_mirror@green:85 85:light_mirror@red:0 .*:light_mirror@yellow:0

# react on Dimmer_Spiegel_Bad
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SpiegelBad_Val notify Dimmer_Spiegel_Bad.* {\
  if (AttrVal ("Dimmer_Spiegel_Bad", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Spiegel_Bad plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 spiegelbad_trigger 0;; \
      set Wago880 spiegelbad_data $EVENT;; \
      set Wago880 spiegelbad_trigger 1;; \
      sleep 3;; set Wago880 spiegelbad_trigger 0;; \
    ") \
  } \
}


###############################################################################
### Dimmer Luftraum 
define Dimmer_Luftraum dummy
attr Dimmer_Luftraum room Licht,Eingang,SPS
attr Dimmer_Luftraum group Licht
attr Dimmer_Luftraum webCmd off:25:50:on
attr Dimmer_Luftraum eventMap /off:0/25:25/50:50/on:65/
#attr Dimmer_Luftraum webCmd on:off
attr Dimmer_Luftraum fp_erdgeschoss 559,1030,0,Luftraum
attr Dimmer_Luftraum fp_obergeschoss 489,1123,0,Luftraum
#attr Dimmer_Luftraum devStateIcon off:off:on on:on:off
attr Dimmer_Luftraum devStateIcon 0:off:65 65:on:0 .*:on:0
attr Dimmer_Luftraum userattr plcflag

# react on Dimmer_Luftraum
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Luftraum_Val notify Dimmer_Luftraum.* {\
  if (AttrVal ("Dimmer_Luftraum", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Luftraum plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 luftraum_trigger 0;; \
      set Wago880 luftraum_data $EVENT;; \
      set Wago880 luftraum_trigger 1;; \
      sleep 3;; set Wago880 luftraum_trigger 0;; \
    ") \
  } \
}

###############################################################################
### Dimmer Gast 
define Dimmer_Gast dummy
attr Dimmer_Gast room Licht,Gast,SPS
attr Dimmer_Gast group Licht
attr Dimmer_Gast webCmd off:25:on:80
attr Dimmer_Gast eventMap /off:0/25:25/on:50/80:80/
attr Dimmer_Gast fp_erdgeschoss 799,943,0,Gast
attr Dimmer_Gast devStateIcon 0:off:50 50:on:0 .*:dim50%:0
attr Dimmer_Gast userattr plcflag

# react on Dimmer_Gast
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Gast_Val notify Dimmer_Gast.* {\
  if (AttrVal ("Dimmer_Gast", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Gast plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 gast_trigger 0;; \
      set Wago880 gast_data $EVENT;; \
      set Wago880 gast_trigger 1;; \
      sleep 3;; set Wago880 gast_trigger 0;; \
    ") \
  } \
}

