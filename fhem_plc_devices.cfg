###############################################################################
#                                                                             #
# fhem_plc_devices.cfg                             Wolfram Plettscher 08/2016 #
# included into fhem_main.cfg                                                 #
#                                                                             #
# communicate with Wago PLC devices (except dimmer devices)                   #
#                                                                             #
###############################################################################

###############################################################################
### Schminkspiegel
define Schminkspiegel dummy
attr Schminkspiegel room Licht,Bad,SPS
attr Schminkspiegel group Licht
attr Schminkspiegel webCmd off:on
attr Schminkspiegel userattr plcflag

attr Schminkspiegel fp_obergeschoss 653,1062,0,Schminkspiegel
attr Schminkspiegel devStateIcon off:light_wall_1@green:on on:light_wall_1@red:off

# react on Schminkspiegel switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_On notify Schminkspiegel.on {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 1;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0;; \
    ") \
  } \
}

# react on Schminkspiegel switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_Off notify Schminkspiegel.off {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 0;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0;; \
    ") \
  } \
}


###############################################################################
### Strahler 5 BÃ¤ume im Garten
define BaeumeGarten dummy
attr BaeumeGarten room Licht,AussenGarten,SPS
attr BaeumeGarten group Licht
attr BaeumeGarten webCmd off:on
attr BaeumeGarten userattr plcflag
attr BaeumeGarten devStateIcon off:off:on on:on:off
attr BaeumeGarten fp_garten 971,149,0,BaeumeGarten

# react on BaeumeGarten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeGarten_On notify BaeumeGarten.on {\
  if (AttrVal ("BaeumeGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumegarten_trigger 0;; \
      set Wago880 baeumegarten_data 1;; \
      set Wago880 baeumegarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumegarten_trigger 0;; \
    ") \
  } \
}

# react on BaeumeGarten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeGarten_Off notify BaeumeGarten.off {\
  if (AttrVal ("BaeumeGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumegarten_trigger 0;; \
      set Wago880 baeumegarten_data 0;; \
      set Wago880 baeumegarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumegarten_trigger 0;; \
    ") \
  } \
}

###############################################################################
### Zisternenpumpe Garten
define ZisterneGarten dummy
attr ZisterneGarten room Schalter,AussenGarten,SPS
attr ZisterneGarten group Schalter
##attr ZisterneGarten webCmd on:off
attr ZisterneGarten userattr plcflag
attr ZisterneGarten plcflag false
attr ZisterneGarten devStateIcon off:off:on on:on:off
attr ZisterneGarten eventMap /on-for-timer 7200:Std2/off:off/
attr ZisterneGarten webCmd Std2
#attr ZisterneGarten follow-on-for-timer 1
attr ZisterneGarten devStateIcon off:sani_water_tap@white:Std2 *.:sani_water_tap@red:off
attr ZisterneGarten fp_garten 908,1176,0,ZisterneGarten

define actOn_ZisterneGarten notify ZisterneGarten.* {\
  if (AttrVal ("ZisterneGarten", "plcflag", "false") ne "true") { \
    if ($EVENT eq "off") { \
      fhem (" \
        set Wago880 zisternegarten_trigger 0;; \
        set Wago880 zisternegarten_data 0;; \
        set Wago880 zisternegarten_trigger 1;; \
        sleep 0.1;; set Wago880 zisternegarten_trigger 0;; \
      ") \
    } else { \
      fhem (" \
        set Wago880 zisternegarten_trigger 0;; \
        set Wago880 zisternegarten_data 1;; \
        set Wago880 zisternegarten_trigger 1;; \
        sleep 0.1;; set Wago880 zisternegarten_trigger 0;; \
      ") \
    } \
  } \
  fhem (" \
    attr ZisterneGarten plcflag false;; \
  ") \
}

###############################################################################
### Steckdose / Licht Bambus Garten
define LichtBambus dummy
attr LichtBambus room Licht,AussenGarten,SPS
attr LichtBambus group Licht
attr LichtBambus webCmd off:on
attr LichtBambus userattr plcflag
attr LichtBambus devStateIcon off:message_socket@white:on on:message_socket@red:off
attr LichtBambus fp_garten 812,1361,0,LichtBambus

# react on Licht Bambus Garten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_LichtBambus_On notify LichtBambus.on {\
  if (AttrVal ("LichtBambus", "plcflag", "true") eq "true") { \
    fhem (" \
      attr LichtBambus plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 lichtbambus_trigger 0;; \
      set Wago880 lichtbambus_data 1;; \
      set Wago880 lichtbambus_trigger 1;; \
      sleep 0.1;; set Wago880 lichtbambus_trigger 0;; \
    ") \
  } \
}

# react on Licht Bambus Garten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_LichtBambus_Off notify LichtBambus.off {\
  if (AttrVal ("LichtBambus", "plcflag", "true") eq "true") { \
    fhem (" \
      attr LichtBambus plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 lichtbambus_trigger 0;; \
      set Wago880 lichtbambus_data 0;; \
      set Wago880 lichtbambus_trigger 1;; \
      sleep 0.1;; set Wago880 lichtbambus_trigger 0;; \
    ") \
  } \
}

###############################################################################
### Steckdosen Gartenzaun (Prengel, Rondorf)
define SteckdoseGarten dummy
attr SteckdoseGarten room Licht,AussenGarten,SPS
attr SteckdoseGarten group Licht
attr SteckdoseGarten webCmd off:on
attr SteckdoseGarten userattr plcflag
attr SteckdoseGarten devStateIcon off:message_socket@white:on on:message_socket@red:off
attr SteckdoseGarten fp_garten 810,1,0,SteckdoseGarten

# react on SteckdoseGarten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SteckdoseGarten_On notify SteckdoseGarten.on {\
  if (AttrVal ("SteckdoseGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr SteckdoseGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 steckdosegarten_trigger 0;; \
      set Wago880 steckdosegarten_data 1;; \
      set Wago880 steckdosegarten_trigger 1;; \
      sleep 0.1;; set Wago880 steckdosegarten_trigger 0;; \
    ") \
  } \
}

# react on SteckdoseGarten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SteckdoseGarten_Off notify SteckdoseGarten.off {\
  if (AttrVal ("SteckdoseGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr SteckdoseGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 steckdosegarten_trigger 0;; \
      set Wago880 steckdosegarten_data 0;; \
      set Wago880 steckdosegarten_trigger 1;; \
      sleep 0.1;; set Wago880 steckdosegarten_trigger 0;; \
    ") \
  } \
}




