###############################################################################
#                                                                             #
# fhem_plc_devices.cfg                             Wolfram Plettscher 11/2018 #
# included into fhem_main.cfg                                                 #
#                                                                             #
# communicate with Wago PLC devices (except dimmer devices)                   #
#                                                                             #
###############################################################################

###############################################################################
### Schminkspiegel
define Schminkspiegel dummy
attr Schminkspiegel room Licht,Bad,SPS
attr Schminkspiegel group Licht
attr Schminkspiegel webCmd off:on
attr Schminkspiegel userattr plcflag
attr Schminkspiegel plcflag false 

attr Schminkspiegel fp_obergeschoss 653,1062,0,Schminkspiegel
attr Schminkspiegel devStateIcon off:light_wall_1@green:on on:light_wall_1@red:off

# react on Schminkspiegel switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_On notify Schminkspiegel.on {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 1;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0\
    ") \
  } \
}

# react on Schminkspiegel switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_Off notify Schminkspiegel.off {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 0;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0\
    ") \
  } \
}


###############################################################################
### Strahler Bäume im Vorgarten
define BaeumeVorgarten dummy
attr BaeumeVorgarten room Licht,AussenFront,SPS
attr BaeumeVorgarten group Licht
attr BaeumeVorgarten webCmd off:on
attr BaeumeVorgarten userattr plcflag
attr BaeumeVorgarten plcflag false
attr BaeumeVorgarten devStateIcon off:off:on on:on:off .*:edit_settings@red:off
attr BaeumeVorgarten fp_vorgarten 727,267,0,BaeumeVorgarten

# react on BaeumeVorgarten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeVorgarten_On notify BaeumeVorgarten.on {\
  if (AttrVal ("BaeumeVorgarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeVorgarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumevorgarten_trigger 0;; \
      set Wago880 baeumevorgarten_data 1;; \
      set Wago880 baeumevorgarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumevorgarten_trigger 0\
    ") \
  };; \
  fhem ("set hmStatus_Led_10 led red")\
}

# react on BaeumeVorgarten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeVorgarten_Off notify BaeumeVorgarten.off {\
  if (AttrVal ("BaeumeVorgarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeVorgarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumevorgarten_trigger 0;; \
      set Wago880 baeumevorgarten_data 0;; \
      set Wago880 baeumevorgarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumevorgarten_trigger 0\
    ") \
  };; \
  fhem ("set hmStatus_Led_10 led green")\
}

# if undefined, set off
define actOn_BaeumeVorgarten_undefined notify BaeumeVorgarten { \
  if (Value("BaeumeVorgarten") eq "???") { \
    fhem (" \
      set BaeumeVorgarten off;; \
    ") \
  } \
}

###############################################################################
### Strahler 5 Bäume im Garten
define BaeumeGarten dummy
attr BaeumeGarten room Licht,AussenGarten,SPS
attr BaeumeGarten group Licht
attr BaeumeGarten webCmd off:on
attr BaeumeGarten userattr plcflag
attr BaeumeGarten plcflag false
attr BaeumeGarten devStateIcon off:off@white:on on:on@red:off
attr BaeumeGarten fp_garten 1020,78,0,BaeumeGarten

# react on BaeumeGarten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeGarten_On notify BaeumeGarten.on {\
  if (AttrVal ("BaeumeGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumegarten_trigger 0;; \
      set Wago880 baeumegarten_data 1;; \
      set Wago880 baeumegarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumegarten_trigger 0\
    ") \
  } \
}

# react on BaeumeGarten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeGarten_Off notify BaeumeGarten.off {\
  if (AttrVal ("BaeumeGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumegarten_trigger 0;; \
      set Wago880 baeumegarten_data 0;; \
      set Wago880 baeumegarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumegarten_trigger 0\
    ") \
  } \
}

###############################################################################
### Zisternenpumpe Garten
define ZisterneGarten dummy
attr ZisterneGarten room Schalter,AussenGarten,SPS
attr ZisterneGarten group Schalter
##attr ZisterneGarten webCmd on:off
attr ZisterneGarten userattr plcflag
attr ZisterneGarten plcflag false
attr ZisterneGarten devStateIcon off:off:on on:on:off
attr ZisterneGarten eventMap /on-for-timer 7200:Std2/off:off/
attr ZisterneGarten webCmd Std2
#attr ZisterneGarten follow-on-for-timer 1
attr ZisterneGarten devStateIcon off:sani_water_tap@white:Std2 .*:sani_water_tap@red:off
attr ZisterneGarten fp_garten 966,1211,0,ZisterneGarten

define actOn_ZisterneGarten notify ZisterneGarten.* {\
  if (AttrVal ("ZisterneGarten", "plcflag", "false") ne "true") { \
    if ($EVENT eq "off") { \
      fhem (" \
        set Wago880 zisternegarten_trigger 0;; \
        set Wago880 zisternegarten_data 0;; \
        set Wago880 zisternegarten_trigger 1;; \
        sleep 0.1;; set Wago880 zisternegarten_trigger 0\
      ") \
    } else { \
      fhem (" \
        set Wago880 zisternegarten_trigger 0;; \
        set Wago880 zisternegarten_data 1;; \
        set Wago880 zisternegarten_trigger 1;; \
        sleep 0.1;; set Wago880 zisternegarten_trigger 0\
      ") \
    } \
  } \
  fhem (" \
    attr ZisterneGarten plcflag false;; \
  ") \
}

###############################################################################
### Steckdose / Licht Bambus Garten
define LichtBambus dummy
attr LichtBambus room Licht,AussenGarten,SPS
attr LichtBambus group Licht
attr LichtBambus webCmd off:on
attr LichtBambus userattr plcflag
attr LichtBambus plcflag false 
attr LichtBambus devStateIcon off:message_socket@white:on on:message_socket@red:off
attr LichtBambus fp_garten 815,1427,0,LichtBambus

# react on Licht Bambus Garten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_LichtBambus_On notify LichtBambus.on {\
  if (AttrVal ("LichtBambus", "plcflag", "true") eq "true") { \
    fhem (" \
      attr LichtBambus plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 lichtbambus_trigger 0;; \
      set Wago880 lichtbambus_data 1;; \
      set Wago880 lichtbambus_trigger 1;; \
      sleep 0.1;; set Wago880 lichtbambus_trigger 0\
    ") \
  } \
}

# react on Licht Bambus Garten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_LichtBambus_Off notify LichtBambus.off {\
  if (AttrVal ("LichtBambus", "plcflag", "true") eq "true") { \
    fhem (" \
      attr LichtBambus plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 lichtbambus_trigger 0;; \
      set Wago880 lichtbambus_data 0;; \
      set Wago880 lichtbambus_trigger 1;; \
      sleep 0.1;; set Wago880 lichtbambus_trigger 0\
    ") \
  } \
}

###############################################################################
### Steckdosen Gartenzaun (Prengel, Rondorf)
define SteckdoseGarten dummy
attr SteckdoseGarten room Licht,AussenGarten,SPS
attr SteckdoseGarten group Licht
attr SteckdoseGarten webCmd off:on
attr SteckdoseGarten userattr plcflag
attr SteckdoseGarten plcflag false
attr SteckdoseGarten devStateIcon off:message_socket@white:on on:message_socket@red:off
attr SteckdoseGarten fp_garten 689,161,0,SteckdoseGarten

# react on SteckdoseGarten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SteckdoseGarten_On notify SteckdoseGarten.on {\
  if (AttrVal ("SteckdoseGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr SteckdoseGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 steckdosegarten_trigger 0;; \
      set Wago880 steckdosegarten_data 1;; \
      set Wago880 steckdosegarten_trigger 1;; \
      sleep 0.1;; set Wago880 steckdosegarten_trigger 0\
    ") \
  } \
}

# react on SteckdoseGarten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SteckdoseGarten_Off notify SteckdoseGarten.off {\
  if (AttrVal ("SteckdoseGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr SteckdoseGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 steckdosegarten_trigger 0;; \
      set Wago880 steckdosegarten_data 0;; \
      set Wago880 steckdosegarten_trigger 1;; \
      sleep 0.1;; set Wago880 steckdosegarten_trigger 0\
    ") \
  } \
}


###############################################################################
### Steckdose Kaffee
define SteckdoseKaffee dummy
attr SteckdoseKaffee room Kueche,SPS
attr SteckdoseKaffee group Schalter
attr SteckdoseKaffee webCmd off:on
attr SteckdoseKaffee userattr plcflag
attr SteckdoseKaffee plcflag false
#attr SteckdoseKaffee devStateIcon off:message_socket@white:on on:message_socket@red:off
attr SteckdoseKaffee devStateIcon off:espresso_white_mini.png:on on:espresso_red_mini.png:off
attr SteckdoseKaffee fp_erdgeschoss 687,291,0,SteckdoseKaffee

# react on SteckdoseKaffee switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SteckdoseKaffee_On notify SteckdoseKaffee.on {\
  if (AttrVal ("SteckdoseKaffee", "plcflag", "true") eq "true") { \
    fhem (" \
      attr SteckdoseKaffee plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 kaffee_trigger 0;; \
      set Wago880 kaffee_data 1;; \
      set Wago880 kaffee_trigger 1;; \
      sleep 0.1;; set Wago880 kaffee_trigger 0\
    ") \
  } \
}

# react on SteckdoseKaffee switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SteckdoseKaffee_Off notify SteckdoseKaffee.off {\
  if (AttrVal ("SteckdoseKaffee", "plcflag", "true") eq "true") { \
    fhem (" \
      attr SteckdoseKaffee plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 kaffee_trigger 0;; \
      set Wago880 kaffee_data 0;; \
      set Wago880 kaffee_trigger 1;; \
      sleep 0.1;; set Wago880 kaffee_trigger 0\
    ") \
  } \
}

###############################################################################
### Dachfenster Waschküche
define Dachfenster_Waschkueche dummy
attr Dachfenster_Waschkueche group Szenario
attr Dachfenster_Waschkueche room Szenario,Server,Fenster
attr Dachfenster_Waschkueche eventMap /off:Zu/on:Auf/
attr Dachfenster_Waschkueche webCmd Zu:Auf

define nt_DachWasch_close notify Dachfenster_Waschkueche:off {\
  fhem (" \
    set Wago880 dachwasch_close_trigger 0;; \
    set Wago880 dachwasch_close_data 1;; \
    set Wago880 dachwasch_close_trigger 1;; \
    sleep 0.1;; set Wago880 dachwasch_close_trigger 0\
  ") \
}

define nt_DachWasch_open notify Dachfenster_Waschkueche:on {\
  fhem (" \
    set Wago880 dachwasch_open_trigger 0;; \
    set Wago880 dachwasch_open_data 1;; \
    set Wago880 dachwasch_open_trigger 1;; \
    sleep 0.1;; set Wago880 dachwasch_open_trigger 0\
  ") \
}

###############################################################################
### Dachfenster Serverraum
define Dachfenster_Serverraum dummy
attr Dachfenster_Serverraum group Szenario
attr Dachfenster_Serverraum room Szenario,Server,Fenster
attr Dachfenster_Serverraum eventMap /off:Zu/on:Auf/
attr Dachfenster_Serverraum webCmd Zu:Auf

define nt_DachServer_close notify Dachfenster_Serverraum:off {\
  fhem (" \
    set Wago880 dachserver_close_trigger 0;; \
    set Wago880 dachserver_close_data 1;; \
    set Wago880 dachserver_close_trigger 1;; \
    sleep 0.1;; set Wago880 dachserver_close_trigger 0\
  ") \
}

define nt_DachServer_open notify Dachfenster_Serverraum:on {\
  fhem (" \
    set Wago880 dachserver_open_trigger 0;; \
    set Wago880 dachserver_open_data 1;; \
    set Wago880 dachserver_open_trigger 1;; \
    sleep 0.1;; set Wago880 dachserver_open_trigger 0\
  ") \
}

define AutoDachServer dummy
attr AutoDachServer room Server,Schalter,Fenster
attr AutoDachServer devStateIcon off:general_aus@white:on on:general_an@yellow:off
attr AutoDachServer webCmd off:on
attr AutoDachServer fp_homecontrol 121,545,0,AutoDachServer

define actOn_AutoDachServer_On notify AutoDachServer.on {\
  fhem "set OutOfHome off"\
}

###############################################################################
### define Feuermelder_Alarm
define Feuermelder_Alarm dummy
attr Feuermelder_Alarm room Alarm,SPS
attr Feuermelder_Alarm group Alarm
attr Feuermelder_Alarm webCmd alarm:alarm_off:ok
attr Feuermelder_Alarm userattr plcflag
attr Feuermelder_Alarm plcflag false
attr Feuermelder_Alarm devStateIcon ok:secur_alarm@white:ok alarm:secur_alarm@red:ok alarm_off:secur_alarm@yellow:ok
attr Feuermelder_Alarm fp_homecontrol 105,1007,0,Feuermelder_Alarm

define FileLog_Feuermelder_Alarm FileLog /opt/fhem/log/Feuermelder-%Y.log Feuermelder_Alarm
attr FileLog_Feuermelder_Alarm logtype text
attr FileLog_Feuermelder_Alarm room Logs

set Feuermelder_Alarm ok

### Alarm on
define actOn_Feuermelder_Alarm notify Feuermelder_Alarm.alarm { \
  fhem "set hmStatus_Led_09 led red";;\
  GetHttpFile ("i2sms.de:80", "/cgi-perl/prepaid/private/smsversand.cgi?von=01724560452&passwort=linux4me&absender=eigen&ziel=00491724560452&text=Feuer-Alarm%20(test)%20Plettscher%2053797%20Lohmar-Neuhonrath%20KrebsauelerStr%2022d");;\
}

### Alarm off (Automatisches Alarmende)
define actOn_Feuermelder_AlarmOff notify Feuermelder_Alarm.alarm_off { \
  fhem "set hmStatus_Led_09 led orange";;\
}

### Alarm ok (nach manuellem Löschen des Alarms oder Neustart des Systems)
define actOn_Feuermelder_AlarmOK notify Feuermelder_Alarm.ok { \
  fhem "set hmStatus_Led_09 led green";;\
}

###############################################################################
### define Feuermelder_Fail
define Feuermelder_Fail dummy
attr Feuermelder_Fail room Alarm,SPS
attr Feuermelder_Fail group Alarm
attr Feuermelder_Fail webCmd alarm:alarm_off:ok
attr Feuermelder_Fail userattr plcflag
attr Feuermelder_Fail plcflag false
attr Feuermelder_Fail devStateIcon ok:secur_alarm@white:ok alarm:secur_alarm@red:ok alarm_off:secur_alarm@yellow:ok
attr Feuermelder_Fail fp_homecontrol 158,1007,0,Feuermelder_Fail

define FileLog_Feuermelder_Fail FileLog /opt/fhem/log/Feuermelder-%Y.log Feuermelder_Fail
attr FileLog_Feuermelder_Fail logtype text
attr FileLog_Feuermelder_Fail room Logs

set Feuermelder_Fail ok

