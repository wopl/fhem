###############################################################################
#                                                                             #
# fhem_plc_devices.cfg                             Wolfram Plettscher 06/2016 #
# included into fhem_main.cfg                                                 #
#                                                                             #
# communicate with Wago PLC devices                                           #
#                                                                             #
###############################################################################

###############################################################################
### Schminkspiegel
define Schminkspiegel dummy
attr Schminkspiegel room Licht,Bad,SPS
attr Schminkspiegel group Licht
attr Schminkspiegel webCmd on:off
attr Schminkspiegel userattr plcflag

# react on Schminkspiegel switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_On notify Schminkspiegel.on {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 1;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0;; \
    ") \
  } \
}

# react on Schminkspiegel switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_Off notify Schminkspiegel.off {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 0;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0;; \
    ") \
  } \
}


###############################################################################
### Dimmer Spiegel Bad
define Dimmer_Spiegel_Bad dummy
attr Dimmer_Spiegel_Bad room Licht,Bad,SPS
attr Dimmer_Spiegel_Bad group Licht
attr Dimmer_Spiegel_Bad webCmd off:25:50:on
attr Dimmer_Spiegel_Bad eventMap /off:0/25:25/50:50/on:85/
attr Dimmer_Spiegel_Bad userattr plcflag

# react on Dimmer_Spiegel_Bad
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SpiegelBad_Val notify Dimmer_Spiegel_Bad.* {\
  if (AttrVal ("Dimmer_Spiegel_Bad", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Spiegel_Bad plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 spiegelbad_trigger 0;; \
      set Wago880 spiegelbad_data $EVENT;; \
      set Wago880 spiegelbad_trigger 1;; \
      sleep 3;; set Wago880 spiegelbad_trigger 0;; \
    ") \
  } \
}


###############################################################################
### Dimmer Luftraum 
define Dimmer_Luftraum dummy
attr Dimmer_Luftraum room Licht,Eingang,SPS
attr Dimmer_Luftraum group Licht
attr Dimmer_Luftraum webCmd off:25:50:on
attr Dimmer_Luftraum eventMap /off:0/25:25/50:50/on:65/
#attr Dimmer_Luftraum webCmd on:off
attr Dimmer_Luftraum fp_erdgeschoss 574,1220,0,Luftraum
attr Dimmer_Luftraum devStateIcon off:off:on on:on:off
attr Dimmer_Luftraum userattr plcflag

# react on Dimmer_Luftraum
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Luftraum_Val notify Dimmer_Luftraum.* {\
  if (AttrVal ("Dimmer_Luftraum", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Luftraum plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 luftraum_trigger 0;; \
      set Wago880 luftraum_data $EVENT;; \
      set Wago880 luftraum_trigger 1;; \
      sleep 3;; set Wago880 luftraum_trigger 0;; \
    ") \
  } \
}


##attr Dimmer_Gast_b eventMap /off:off/25:25/50:on/80:80/
##attr Dimmer_Gast_b subType dimmer
##attr Dimmer_Gast_b webCmd off:25:on:80
##attr Dimmer_Gast_b fp_erdgeschoss 954,1081,0,Gast_b
##attr Dimmer_Gast_b devStateIcon off:off:50 on:on:0 .*:dim50%:0
#
#define actOn_Dimmer_Luftraum_On notify Dimmer_Luftraum.on \
#  set Wago880 coil2_w 0;; \
#  set Wago880 coil1_w 1;; \
#  set Wago880 coil2_w 1;; \
#  sleep 0.1;; set Wago880 coil2_w 0;;
#
#define actOn_Dimmer_Luftraum_Off notify Dimmer_Luftraum.off \
#  set Wago880 coil2_w 0;; \
#  set Wago880 coil1_w 0;; \
#  set Wago880 coil2_w 1;; \
#  sleep 0.1;; set Wago880 coil2_w 0;;
#
#define actOn_Wago880_coil1 notify Wago880:coil1_r.* { \
#  if (ReadingsVal ("Wago880", "coil1_r", "1")) { \
#    fhem (" \
#       set Dimmer_Luftraum on \
#    ") \
#  } else { \
#    fhem (" \
#       set Dimmer_Luftraum off \
#    ") \
#  } \
#}

###############################################################################
### Dimmer __test to build Wago SPS Dimmer
define Dimmer__test dummy
attr Dimmer__test room Licht,Bad,SPS
attr Dimmer__test group Licht
attr Dimmer__test webCmd off:25:50:on
attr Dimmer__test eventMap /off:0/25:25/50:50/on:85/
attr Dimmer__test userattr plcflag

# react on Dimmer__test
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Dimmer__test_Val notify Dimmer__test.* {\
  if (AttrVal ("Dimmer__test", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer__test plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago881 testsps_trigger1 0;; \
      set Wago881 testsps_data1 $EVENT;; \
      set Wago881 testsps_trigger1 1;; \
      sleep 3;; set Wago881 testsps_trigger1 0;; \
    ") \
  } \
}
