###############################################################################
#                                                                             #
# fhem_plc_devices.cfg                             Wolfram Plettscher 07/2016 #
# included into fhem_main.cfg                                                 #
#                                                                             #
# communicate with Wago PLC devices                                           #
#                                                                             #
###############################################################################

###############################################################################
### Schminkspiegel
define Schminkspiegel dummy
attr Schminkspiegel room Licht,Bad,SPS
attr Schminkspiegel group Licht
attr Schminkspiegel webCmd on:off
attr Schminkspiegel userattr plcflag

attr Schminkspiegel fp_obergeschoss 653,1062,0,Schminkspiegel
attr Schminkspiegel devStateIcon off:light_wall_1@green:on on:light_wall_1@red:off

# react on Schminkspiegel switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_On notify Schminkspiegel.on {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 1;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0;; \
    ") \
  } \
}

# react on Schminkspiegel switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Schminkspiegel_Off notify Schminkspiegel.off {\
  if (AttrVal ("Schminkspiegel", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Schminkspiegel plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 schminkspiegel_trigger 0;; \
      set Wago880 schminkspiegel_data 0;; \
      set Wago880 schminkspiegel_trigger 1;; \
      sleep 0.1;; set Wago880 schminkspiegel_trigger 0;; \
    ") \
  } \
}


###############################################################################
### Dimmer Spiegel Bad
define Dimmer_Spiegel_Bad dummy
attr Dimmer_Spiegel_Bad room Licht,Bad,SPS
attr Dimmer_Spiegel_Bad group Licht
#attr Dimmer_Spiegel_Bad webCmd off:25:50:on
#attr Dimmer_Spiegel_Bad eventMap /off:0/25:25/50:50/on:85/
attr Dimmer_Spiegel_Bad userattr plcflag

attr Dimmer_Spiegel_Bad eventMap /off:0/25:25/50:50/on:85/
attr Dimmer_Spiegel_Bad webCmd off:25:50:on
attr Dimmer_Spiegel_Bad fp_obergeschoss 653,1145,0,Spiegel_Bad
attr Dimmer_Spiegel_Bad devStateIcon 0:light_mirror@green:85 85:light_mirror@red:0 .*:light_mirror@yellow:0

# react on Dimmer_Spiegel_Bad
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_SpiegelBad_Val notify Dimmer_Spiegel_Bad.* {\
  if (AttrVal ("Dimmer_Spiegel_Bad", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Spiegel_Bad plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 spiegelbad_trigger 0;; \
      set Wago880 spiegelbad_data $EVENT;; \
      set Wago880 spiegelbad_trigger 1;; \
      sleep 3;; set Wago880 spiegelbad_trigger 0;; \
    ") \
  } \
}


###############################################################################
### Dimmer Luftraum 
define Dimmer_Luftraum dummy
attr Dimmer_Luftraum room Licht,Eingang,SPS
attr Dimmer_Luftraum group Licht
attr Dimmer_Luftraum webCmd off:25:50:on
attr Dimmer_Luftraum eventMap /off:0/25:25/50:50/on:65/
#attr Dimmer_Luftraum webCmd on:off
attr Dimmer_Luftraum fp_erdgeschoss 559,1030,0,Luftraum
attr Dimmer_Luftraum fp_obergeschoss 489,1123,0,Luftraum
#attr Dimmer_Luftraum devStateIcon off:off:on on:on:off
attr Dimmer_Luftraum devStateIcon 0:off:65 65:on:0 .*:on:0
attr Dimmer_Luftraum userattr plcflag

# react on Dimmer_Luftraum
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Luftraum_Val notify Dimmer_Luftraum.* {\
  if (AttrVal ("Dimmer_Luftraum", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer_Luftraum plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 luftraum_trigger 0;; \
      set Wago880 luftraum_data $EVENT;; \
      set Wago880 luftraum_trigger 1;; \
      sleep 3;; set Wago880 luftraum_trigger 0;; \
    ") \
  } \
}

###############################################################################
### Strahler 5 BÃ¤ume im Garten
define BaeumeGarten dummy
attr BaeumeGarten room Licht,AussenGarten,SPS
attr BaeumeGarten group Licht
attr BaeumeGarten webCmd on:off
attr BaeumeGarten userattr plcflag
attr BaeumeGarten devStateIcon off:off:on on:on:off
attr BaeumeGarten fp_garten 971,149,0,BaeumeGarten

# react on BaeumeGarten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeGarten_On notify BaeumeGarten.on {\
  if (AttrVal ("BaeumeGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumegarten_trigger 0;; \
      set Wago880 baeumegarten_data 1;; \
      set Wago880 baeumegarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumegarten_trigger 0;; \
    ") \
  } \
}

# react on BaeumeGarten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_BaeumeGarten_Off notify BaeumeGarten.off {\
  if (AttrVal ("BaeumeGarten", "plcflag", "true") eq "true") { \
    fhem (" \
      attr BaeumeGarten plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 baeumegarten_trigger 0;; \
      set Wago880 baeumegarten_data 0;; \
      set Wago880 baeumegarten_trigger 1;; \
      sleep 0.1;; set Wago880 baeumegarten_trigger 0;; \
    ") \
  } \
}

###############################################################################
### Zisternenpumpe Garten
define ZisterneGarten dummy
attr ZisterneGarten room Schalter,AussenGarten,SPS
attr ZisterneGarten group Schalter
//attr ZisterneGarten webCmd on:off
attr ZisterneGarten userattr plcflag myflag
attr ZisterneGarten plcflag false
attr ZisterneGarten myflag hugo
attr ZisterneGarten devStateIcon off:off:on on:on:off
attr ZisterneGarten eventMap /on-for-timer 7200:Std2/off:off/
attr ZisterneGarten webCmd Std2
attr ZisterneGarten follow-on-for-timer 1
attr ZisterneGarten devStateIcon off:sani_water_tap@white:Std2 *.:sani_water_tap@red:off
attr ZisterneGarten fp_garten 908,1176,0,ZisterneGarten

# react on Zisternenpumpe Garten
# if plcflag is set, do NOT send command to Wago880
# ********** works ***********
#define actOn_ZisterneGarten_Onx notify ZisterneGarten.* {\
#  if (AttrVal ("ZisterneGarten", "plcflag", "false") eq "false") { \
#    if ($EVENT eq "off") { \
#      fhem (" \
#        attr ZisterneGarten myflag eventoff;; \
#        set Wago880 zisternegarten_trigger 0;; \
#        set Wago880 zisternegarten_data 0;; \
#        set Wago880 zisternegarten_trigger 1;; \
#        sleep 0.1;; set Wago880 zisternegarten_trigger 0;; \
#      ") \
#    } else { \
#      fhem (" \
#        attr ZisterneGarten myflag eventon;; \
#        set Wago880 zisternegarten_trigger 0;; \
#        set Wago880 zisternegarten_data 1;; \
#        set Wago880 zisternegarten_trigger 1;; \
#        sleep 0.1;; set Wago880 zisternegarten_trigger 0;; \
#      ") \
#    } \
#  } else { \
#      fhem (" \
#        attr ZisterneGarten myflag plcflagset;; \
#      ") \
#  } \
#  fhem (" \
#    attr ZisterneGarten plcflag false;; \
#  ") \
#}

define actOn_ZisterneGarten notify ZisterneGarten.* {\
  if (AttrVal ("ZisterneGarten", "plcflag", "false") ne "true") { \
    if ($EVENT eq "off") { \
      fhem (" \
        set Wago880 zisternegarten_trigger 0;; \
        set Wago880 zisternegarten_data 0;; \
        set Wago880 zisternegarten_trigger 1;; \
        sleep 0.1;; set Wago880 zisternegarten_trigger 0;; \
      ") \
    } else { \
      fhem (" \
        set Wago880 zisternegarten_trigger 0;; \
        set Wago880 zisternegarten_data 1;; \
        set Wago880 zisternegarten_trigger 1;; \
        sleep 0.1;; set Wago880 zisternegarten_trigger 0;; \
      ") \
    } \
  } \
  fhem (" \
    attr ZisterneGarten plcflag false;; \
  ") \
}

###############################################################################
### Steckdose / Licht Bambus Garten
define LichtBambus dummy
attr LichtBambus room Licht,AussenGarten,SPS
attr LichtBambus group Licht
attr LichtBambus webCmd on:off
attr LichtBambus userattr plcflag
attr LichtBambus devStateIcon off:message_socket@white:on on:message_socket@red:off
attr LichtBambus fp_garten 812,1361,0,LichtBambus

# react on Licht Bambus Garten switch-on
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_LichtBambus_On notify LichtBambus.on {\
  if (AttrVal ("LichtBambus", "plcflag", "true") eq "true") { \
    fhem (" \
      attr LichtBambus plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 lichtbambus_trigger 0;; \
      set Wago880 lichtbambus_data 1;; \
      set Wago880 lichtbambus_trigger 1;; \
      sleep 0.1;; set Wago880 lichtbambus_trigger 0;; \
    ") \
  } \
}

# react on Licht Bambus Garten switch-off
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_LichtBambus_Off notify LichtBambus.off {\
  if (AttrVal ("LichtBambus", "plcflag", "true") eq "true") { \
    fhem (" \
      attr LichtBambus plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago880 lichtbambus_trigger 0;; \
      set Wago880 lichtbambus_data 0;; \
      set Wago880 lichtbambus_trigger 1;; \
      sleep 0.1;; set Wago880 lichtbambus_trigger 0;; \
    ") \
  } \
}



###############################################################################
### Dimmer __test to build Wago SPS Dimmer
define Dimmer__test dummy
attr Dimmer__test room Licht,Bad,SPS
attr Dimmer__test group Licht
attr Dimmer__test webCmd off:25:50:on
attr Dimmer__test eventMap /off:0/25:25/50:50/on:85/
attr Dimmer__test userattr plcflag

# react on Dimmer__test
# only transmit status to PLC, if PLC is not origin of change (plcflag)
define actOn_Dimmer__test_Val notify Dimmer__test.* {\
  if (AttrVal ("Dimmer__test", "plcflag", "true") eq "true") { \
    fhem (" \
      attr Dimmer__test plcflag false \
    ") \
  } else { \
    fhem (" \
      set Wago881 testsps_trigger1 0;; \
      set Wago881 testsps_data1 $EVENT;; \
      set Wago881 testsps_trigger1 1;; \
      sleep 3;; set Wago881 testsps_trigger1 0;; \
    ") \
  } \
}
